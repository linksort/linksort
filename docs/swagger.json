{
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Linksort API documentation",
        "title": "Linksort API",
        "termsOfService": "https://linksort.com/terms",
        "contact": {
            "name": "Linksort Support",
            "url": "https://linksort.com",
            "email": "alex@linksort.com"
        },
        "license": {
            "name": "Copyright (c) 2023 Linksort",
            "url": "https://github.com/linksort/linksort/blob/main/LICENSE"
        },
        "version": "1.0"
    },
    "host": "linksort.com",
    "basePath": "/api",
    "paths": {
        "/folders": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "summary": "CreateFolder",
                "parameters": [
                    {
                        "description": "Only 'name' is required. Use 'parentId' to nest the new folder under a parent folder.",
                        "name": "CreateFolderRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/folder.CreateFolderRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/folder.CreateFolderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    }
                }
            }
        },
        "/folders/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "summary": "DeleteFolder",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FolderID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/folder.DeleteFolderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "summary": "UpdateFolder",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FolderID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Change the folder's name or move the folder under a new parent folder. Set the parentId to 'root' to move the folder to the top level.",
                        "name": "UpdateFolderRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/folder.UpdateFolderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/folder.UpdateFolderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    }
                }
            }
        },
        "/links": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Gets a list of links with filters applied through the available query parameters.",
                "summary": "GetLinks",
                "parameters": [
                    {
                        "enum": [
                            "1",
                            "-1"
                        ],
                        "type": "string",
                        "description": "Sort, descending or ascending",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "0",
                            "1"
                        ],
                        "type": "string",
                        "description": "Only return favorites",
                        "name": "favorite",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "0",
                            "1"
                        ],
                        "type": "string",
                        "description": "Only return links with annotations",
                        "name": "annotated",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Only return links from the given folder ID",
                        "name": "folder",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Only return links with the given tag path",
                        "name": "tag",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "type": "integer",
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/link.GetLinksResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a link. Both the new link and the user are returned so that newly created tags can be seen.",
                "summary": "CreateLink",
                "parameters": [
                    {
                        "description": "All fields are optional except 'url'.",
                        "name": "CreateLinkRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/link.CreateLinkRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/link.CreateLinkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    }
                }
            }
        },
        "/links/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Gets a link with all fields populated.",
                "summary": "GetLink",
                "parameters": [
                    {
                        "type": "string",
                        "description": "LinkID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/link.GetLinkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "summary": "DeleteLink",
                "parameters": [
                    {
                        "type": "string",
                        "description": "LinkID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/link.DeleteLinkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "summary": "UpdateLink",
                "parameters": [
                    {
                        "type": "string",
                        "description": "LinkID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "All fields are optional.",
                        "name": "UpdateLinkRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/link.UpdateLinkRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/link.UpdateLinkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "summary": "GetUser",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.GetUserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/payload.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "folder.CreateFolderRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 128
                },
                "parentId": {
                    "type": "string"
                }
            }
        },
        "folder.CreateFolderResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/model.User"
                }
            }
        },
        "folder.DeleteFolderResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/model.User"
                }
            }
        },
        "folder.UpdateFolderRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 128
                },
                "parentId": {
                    "type": "string"
                }
            }
        },
        "folder.UpdateFolderResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/model.User"
                }
            }
        },
        "link.CreateLinkRequest": {
            "type": "object",
            "required": [
                "url"
            ],
            "properties": {
                "corpus": {
                    "type": "string",
                    "maxLength": 500000
                },
                "description": {
                    "type": "string",
                    "maxLength": 2048
                },
                "favicon": {
                    "type": "string",
                    "maxLength": 512
                },
                "image": {
                    "type": "string",
                    "maxLength": 512
                },
                "site": {
                    "type": "string",
                    "maxLength": 512
                },
                "title": {
                    "type": "string",
                    "maxLength": 512
                },
                "url": {
                    "type": "string",
                    "maxLength": 2048
                }
            }
        },
        "link.CreateLinkResponse": {
            "type": "object",
            "properties": {
                "link": {
                    "$ref": "#/definitions/model.Link"
                },
                "user": {
                    "$ref": "#/definitions/model.User"
                }
            }
        },
        "link.DeleteLinkResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/model.User"
                }
            }
        },
        "link.GetLinkResponse": {
            "type": "object",
            "properties": {
                "link": {
                    "$ref": "#/definitions/model.Link"
                }
            }
        },
        "link.GetLinksResponse": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Link"
                    }
                }
            }
        },
        "link.UpdateLinkRequest": {
            "type": "object",
            "properties": {
                "annotation": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "maxLength": 2048
                },
                "favicon": {
                    "type": "string",
                    "maxLength": 512
                },
                "folderId": {
                    "type": "string"
                },
                "image": {
                    "type": "string",
                    "maxLength": 512
                },
                "isFavorite": {
                    "type": "boolean"
                },
                "site": {
                    "type": "string",
                    "maxLength": 512
                },
                "title": {
                    "type": "string",
                    "maxLength": 512
                },
                "url": {
                    "type": "string",
                    "maxLength": 2048
                }
            }
        },
        "link.UpdateLinkResponse": {
            "type": "object",
            "properties": {
                "link": {
                    "$ref": "#/definitions/model.Link"
                }
            }
        },
        "model.Folder": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Folder"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Link": {
            "type": "object",
            "properties": {
                "annotation": {
                    "type": "string"
                },
                "corpus": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "favicon": {
                    "type": "string"
                },
                "folderId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "isAnnotated": {
                    "type": "boolean"
                },
                "isFavorite": {
                    "type": "boolean"
                },
                "site": {
                    "type": "string"
                },
                "tagDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TagDetail"
                    }
                },
                "tagPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "model.TagDetail": {
            "type": "object",
            "properties": {
                "confidence": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "model.TagNode": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TagNode"
                    }
                },
                "count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "folderTree": {
                    "$ref": "#/definitions/model.Folder"
                },
                "hasSeenWelcomeTour": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "tagTree": {
                    "$ref": "#/definitions/model.TagNode"
                },
                "token": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "payload.Error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "user.GetUserResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/model.User"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Bearer token. Your token can be found on Linksort's account page. Example: Bearer \\\u003ctoken\\\u003e",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}